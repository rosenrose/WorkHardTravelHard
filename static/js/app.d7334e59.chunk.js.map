{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","isWork","setIsWork","text","setText","todos","setTodos","isLoading","setIsLoading","loadTodos","a","async","AsyncStorage","getItem","savedTodos","JSON","parse","saveTodos","toSave","setItem","stringify","loadIsWork","saveIsWork","useEffect","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","activeOpacity","Text","btnText","color","TextInput","input","placeholder","onChangeText","value","onSubmitEditing","length","newTodos","Date","now","finished","isEditing","todoText","ScrollView","Object","entries","filter","map","id","todo","todoInput","onChangeTodo","saveEditedTodo","textDecorationLine","icons","TouchableHighlight","editTodo","marginRight","Feather","name","size","finishTodo","Fontisto","Platform","OS","confirm","Alert","alert","deleteTodo","StyleSheet","create","flex","backgroundColor","paddingHorizontal","flexDirection","justifyContent","marginTop","fontSize","paddingVertical","borderRadius","marginVertical","width","alignItems"],"mappings":"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","file":"static/js/app.d7334e59.chunk.js","sourcesContent":["export const theme = {\r\n  background: \"black\",\r\n  gray: \"#3a3d40\",\r\n  todoBackground: \"#5c5c60\",\r\n};\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n  TouchableWithoutFeedback,\r\n  Pressable,\r\n  TextInput,\r\n  ScrollView,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { theme } from \"./colors\";\r\nimport { Fontisto, Feather } from \"@expo/vector-icons\";\r\n\r\nconst TODOS_KEY = \"todos\";\r\nconst ISWORK_KEY = \"iswork\";\r\n\r\nexport default function App() {\r\n  const [isWork, setIsWork] = useState(true);\r\n  const [text, setText] = useState(\"\");\r\n  const [todos, setTodos] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const work = () => {\r\n    setIsWork(true);\r\n    AsyncStorage.setItem(ISWORK_KEY, \"true\");\r\n  };\r\n  const travel = () => {\r\n    setIsWork(false);\r\n    AsyncStorage.setItem(ISWORK_KEY, \"false\");\r\n  };\r\n\r\n  const onChangeText = (input) => {\r\n    setText(input);\r\n  };\r\n  const loadTodos = async () => {\r\n    try {\r\n      const savedTodos = await AsyncStorage.getItem(TODOS_KEY);\r\n      // empty: null\r\n      // console.log(savedTodos);\r\n\r\n      if (savedTodos) {\r\n        setTodos(JSON.parse(savedTodos));\r\n      }\r\n    } catch (e) {}\r\n  };\r\n  const saveTodos = async (toSave) => {\r\n    try {\r\n      await AsyncStorage.setItem(TODOS_KEY, JSON.stringify(toSave));\r\n    } catch (e) {}\r\n  };\r\n  const addTodo = async () => {\r\n    if (!text.length) {\r\n      return;\r\n    }\r\n\r\n    const newTodos = {\r\n      ...todos,\r\n      [Date.now()]: { text, isWork, finished: false, isEditing: false },\r\n    };\r\n    setTodos(newTodos);\r\n    await saveTodos(newTodos);\r\n    setText(\"\");\r\n  };\r\n  const deleteTodo = (id) => {\r\n    if (Platform.OS == \"web\") {\r\n      if (confirm(\"Are you sure?\")) {\r\n        const newTodos = { ...todos };\r\n        delete newTodos[id];\r\n        setTodos(newTodos);\r\n        saveTodos(newTodos);\r\n      }\r\n    } else {\r\n      Alert.alert(\"Delete To Do\", \"Are you sure?\", [\r\n        {\r\n          text: \"OK\",\r\n          onPress: () => {\r\n            const newTodos = { ...todos };\r\n            delete newTodos[id];\r\n            setTodos(newTodos);\r\n            saveTodos(newTodos);\r\n          },\r\n        },\r\n        { text: \"Cancel\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const loadIsWork = async () => {\r\n    try {\r\n      const saveIsWork = await AsyncStorage.getItem(ISWORK_KEY);\r\n      setIsWork(saveIsWork === \"true\" ? true : false);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const finishTodo = (id) => {\r\n    const newTodos = { ...todos };\r\n    newTodos[id].finished = !newTodos[id].finished;\r\n    setTodos(newTodos);\r\n    saveTodos(newTodos);\r\n  };\r\n  const editTodo = (id) => {\r\n    const newTodos = { ...todos };\r\n    newTodos[id].isEditing = !newTodos[id].isEditing;\r\n    setTodos(newTodos);\r\n  };\r\n  const onChangeTodo = (id, text) => {\r\n    const newTodos = { ...todos };\r\n    newTodos[id].text = text;\r\n    setTodos(newTodos);\r\n  };\r\n  const saveEditedTodo = (id) => {\r\n    const newTodos = { ...todos };\r\n    newTodos[id].isEditing = false;\r\n    setTodos(newTodos);\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await loadIsWork();\r\n      await loadTodos();\r\n      setIsLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      <View style={styles.header}>\r\n        <TouchableOpacity onPress={work} activeOpacity={0.5}>\r\n          <Text style={{ ...styles.btnText, color: isWork ? \"white\" : theme.gray }}>Work</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={travel}>\r\n          <Text style={{ ...styles.btnText, color: isWork ? theme.gray : \"white\" }}>Travel</Text>\r\n        </TouchableOpacity>\r\n        {/* <TouchableHighlight onPress={() => {}} underlayColor=\"red\" activeOpacity={0.3}>\r\n          <Text style={styles.btnText}>Travel</Text>\r\n        </TouchableHighlight>\r\n        <TouchableWithoutFeedback>\r\n          <Text style={{ color: \"white\", fontSize: 25 }}>Touch</Text>\r\n        </TouchableWithoutFeedback>\r\n        <Pressable>\r\n          <Text style={{ color: \"white\", fontSize: 25 }}>Press</Text>\r\n        </Pressable> */}\r\n      </View>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder={isWork ? \"Add a Todo\" : \"Where do you want to go?\"}\r\n        onChangeText={onChangeText}\r\n        value={text}\r\n        onSubmitEditing={addTodo}\r\n        // keyboardType=\"visible-password\"\r\n        // returnKeyType=\"go\"\r\n        // returnKeyLabel=\"zz\"\r\n        // secureTextEntry\r\n        // multiline\r\n      />\r\n      {isLoading ? (\r\n        <Text style={styles.todoText}>Loading...</Text>\r\n      ) : (\r\n        <ScrollView>\r\n          {Object.entries(todos)\r\n            .filter(([id, todo]) => todo.isWork === isWork)\r\n            .map(([id, todo]) => (\r\n              <View key={id} style={styles.todo}>\r\n                {todo.isEditing ? (\r\n                  <TextInput\r\n                    style={styles.todoInput}\r\n                    value={todo.text}\r\n                    onChangeText={(text) => {\r\n                      onChangeTodo(id, text);\r\n                    }}\r\n                    onSubmitEditing={() => {\r\n                      saveEditedTodo(id);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Text\r\n                    style={{\r\n                      ...styles.todoText,\r\n                      color: todo.finished ? theme.gray : \"white\",\r\n                      textDecorationLine: todo.finished ? \"line-through\" : \"none\",\r\n                    }}\r\n                  >\r\n                    {todo.text}\r\n                  </Text>\r\n                )}\r\n\r\n                <View style={styles.icons}>\r\n                  <TouchableHighlight\r\n                    onPress={() => {\r\n                      editTodo(id);\r\n                    }}\r\n                    style={{ marginRight: 20 }}\r\n                  >\r\n                    <Feather name=\"edit\" size={20} color={todo.isEditing ? \"white\" : theme.gray} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight\r\n                    onPress={() => {\r\n                      finishTodo(id);\r\n                    }}\r\n                    style={{ marginRight: 20 }}\r\n                  >\r\n                    <Fontisto\r\n                      name={todo.finished ? \"checkbox-active\" : \"checkbox-passive\"}\r\n                      size={20}\r\n                      color={theme.gray}\r\n                    />\r\n                  </TouchableHighlight>\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      deleteTodo(id);\r\n                    }}\r\n                  >\r\n                    <Fontisto name=\"trash\" size={20} color={theme.gray} />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.background,\r\n    paddingHorizontal: 20,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 100,\r\n  },\r\n  btnText: {\r\n    fontSize: 40,\r\n    // fontWeight: \"600\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 30,\r\n    marginVertical: 20,\r\n    fontSize: 18,\r\n  },\r\n  todoInput: {\r\n    width: \"50%\",\r\n    backgroundColor: \"white\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 10,\r\n    fontSize: 16,\r\n  },\r\n  todo: {\r\n    backgroundColor: theme.todoBackground,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 10,\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 15,\r\n  },\r\n  todoText: {\r\n    fontSize: 18,\r\n  },\r\n  icons: {\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n"],"sourceRoot":""}